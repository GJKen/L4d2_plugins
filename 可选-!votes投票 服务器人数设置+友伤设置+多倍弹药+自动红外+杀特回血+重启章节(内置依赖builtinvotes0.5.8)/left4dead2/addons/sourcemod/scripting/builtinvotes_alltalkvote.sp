/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <builtinvotes>

#define VERSION "1.0"

new Handle:g_Vote = INVALID_HANDLE;
new Handle:g_Cvar_Alltalk = INVALID_HANDLE;

public Plugin:myinfo = 
{
	name = "BuiltinVotes Alltalk Test Vote",
	author = "Powerlord",
	description = "Test Alltalk vote for L4D2 for BuiltinVotes.",
	version = VERSION,
	url = "https://forums.alliedmods.net/showthread.php?t=162164"
}

public OnPluginStart()
{
	RegAdminCmd("alltalkvote", HandleTestVote, ADMFLAG_VOTE, "Start an alltalk vote.");
	g_Cvar_Alltalk = FindConVar("sv_alltalk");
	
}

public Action:HandleTestVote(client, args)
{
	if (IsNewBuiltinVoteAllowed())
	{
		g_Vote = CreateBuiltinVote(HandleVote, BuiltinVoteType_Alltalk, BuiltinVoteAction_Cancel | BuiltinVoteAction_VoteEnd | BuiltinVoteAction_End);
//		g_Vote = CreateBuiltinVote(HandleVote, BuiltinVoteType_Custom_YesNo, BuiltinVoteAction_Cancel | BuiltinVoteAction_VoteEnd | BuiltinVoteAction_End);
//		SetBuiltinVoteArgument(g_Vote, "Did this vote work?");
		DisplayBuiltinVoteToAll(g_Vote, 20);
	}
	else
	{
		ReplyToCommand(client, "Vote cannot be started.");
	}
	
	return Plugin_Handled;
}

public HandleVote(Handle:vote, BuiltinVoteAction:action, param1, param2)
{
	switch (action)
	{
		case BuiltinVoteAction_End:
		{
			g_Vote = INVALID_HANDLE;
			CloseHandle(vote);
		}
		
		case BuiltinVoteAction_Cancel:
		{
			DisplayBuiltinVoteFail(vote, BuiltinVoteFailReason:param1);
		}
		
		case BuiltinVoteAction_VoteEnd:
		{
			if (param1 == BUILTINVOTES_VOTE_YES)
			{
				SetConVarBool(g_Cvar_Alltalk, !GetConVarBool(g_Cvar_Alltalk));
				DisplayBuiltinVotePass(vote);
			}
			else if (param1 == BUILTINVOTES_VOTE_NO)
			{
				DisplayBuiltinVoteFail(vote, BuiltinVoteFail_Loses);
			}
			else
			{
				// Should never happen, but is here as a diagnostic
				DisplayBuiltinVoteFail(vote, BuiltinVoteFail_Generic);
				LogMessage("Vote failure. winner = %d", param1);
			}
		}
	}
}